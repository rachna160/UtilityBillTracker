{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "billID",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "consumer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountDue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "dueDate",
						"type": "uint256"
					}
				],
				"name": "BillAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "billID",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "consumer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountPaid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "datePaid",
						"type": "uint256"
					}
				],
				"name": "BillPaid",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_consumer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountDue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_dueDate",
						"type": "uint256"
					}
				],
				"name": "addBill",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "idToBill",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "consumer",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "utilityProvider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountDue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "dueDate",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isPaid",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "datePaid",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_billID",
						"type": "uint256"
					}
				],
				"name": "isOverdue",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_billID",
						"type": "uint256"
					}
				],
				"name": "payBill",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addBill(address,uint256,uint256)": {
					"params": {
						"_amountDue": "The bill amount in Wei.",
						"_consumer": "The address of the customer who owes the bill.",
						"_dueDate": "The Unix timestamp representing the payment due date."
					}
				},
				"isOverdue(uint256)": {
					"params": {
						"_billID": "The unique ID of the bill."
					},
					"returns": {
						"_0": "bool True if the current time is past the due date."
					}
				},
				"payBill(uint256)": {
					"details": "The function must be 'payable' to accept Ether (msg.value).",
					"params": {
						"_billID": "The unique ID of the bill being paid."
					}
				}
			},
			"title": "UtilityBillTracker",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addBill(address,uint256,uint256)": {
					"notice": "Adds a new utility bill to the tracker. Only callable by the Owner."
				},
				"isOverdue(uint256)": {
					"notice": "Checks if a bill is past its due date."
				},
				"payBill(uint256)": {
					"notice": "Allows a consumer to pay their bill."
				}
			},
			"notice": "Smart contract for tracking and processing utility bill payments on the blockchain.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"UtilityBillTracker.sol": "Project"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"UtilityBillTracker.sol": {
			"keccak256": "0x04455ca8690b947a4bea46cb5d2cdd7f0fe49fc608c8a84c3c26a8a681a2ccf5",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7efcce1a4c00e1e116f49c69e7f797a16a62fa382f8c8f189e0da488df2c707",
				"dweb:/ipfs/QmR1ngvUeEtYjtZsJsrdBT4KcqvVCWWCdCD199pJonXV1Y"
			]
		}
	},
	"version": 1
}